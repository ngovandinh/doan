continue
end
((@test.started_at + Settings.doing_time.second) - Time.zone.now).second
(@test.started_at + Settings.doing_time.second) - Time.zone.now
continue
(@test.started_at + Settings.doing_time.second) - Time.zone.now
Time.zone.now
@test.started_at
(@test.started_at + Settings.doing_time.second) - Time.zone.now
continue
@test.started_at - Time.zone.now + Settings.doing_time.second
@test.started_at - Time.zone.now
@test.started_at - Time.zone,now
@test.started_at
continue
params[:search_form]
continue
request.referrer
@sentence
continue
@sentence
continue
_sentence
_sentence,
continue
_sentence
continue
@sentence
continue
_sentence
continue
_sentence
sentence.answer_id
continue
@sentence.answer_id
continue
@sentence.answer_id
@sentence.update_attributes(sentence_params)
@sentence.id
sentence_params
continue
byebug
continue
params
continue
_sentence.id
sentence.id
continue
params
continue
@test.id
@test
_sentence
_sentence,
continue
@sentence.quession.content
@sentence.quession
@sentence.id
continue
@sentence.test.started_at
@sentence.test.status.eql?('finnished')
@sentence.test.id
continue
@test
continue
@test.id
continue
@sentence.test.started_at
finnished_time
@sentence.test.started_at + Settings.doing_time.second
@sentence.test.started_at + Settings.doing_time.second)
Settings.doing_time.second
@sentence.id
continue
@sentence.id
finnished_time
continue
(@sentence.test.started_at + Settings.doing_time.second)
finnished_time
finnished_time > (@sentence.test.started_at + Settings.doing_time.second)
Settings.doing_time.second
@sentence.test.status
continue
quessions.id
quessions
continue
quessions.each do |quession| p quession end
quessions.each do |quession| 
quessions
continue
quessions
continue
@test
continue
params
continue
params
continue
params
exit
params
continue
params
quession_params
     end
       end
         Question.create! row
         row.delete :answers
         row[:answers_attributes] = answers_attributes
         end
           answers_attributes.push answer_hash
           answer_hash[:is_correct] = arr_answer[1]
           answer_hash[:content] = arr_answer[0]
           arr_answer = answer.split(",")
           answer_hash = Hash.new
         row[:answers].split(";").each do |answer|
         answers_attributes = []
         row = row.to_hash
       CSV.foreach(file.path, headers: true, col_sep: "|", header_converters: :symbol) do |row|
def import file
continue
cd ..
quession
@quession
continue
@quession.destroy
@quession
continue
@user
